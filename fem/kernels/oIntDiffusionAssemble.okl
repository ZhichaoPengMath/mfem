// Copyright (c) 2010, Lawrence Livermore National Security, LLC. Produced at
// the Lawrence Livermore National Laboratory. LLNL-CODE-443211. All Rights
// reserved. See file COPYRIGHT for details.
//
// This file is part of the MFEM library. For more information and source code
// availability see http://mfem.org.
//
// MFEM is free software; you can redistribute it and/or modify it under the
// terms of the GNU Lesser General Public License (as published by the Free
// Software Foundation) version 2.1 dated February 1999.

#define ijkNM(i,j,k,N,M) (i)+(N)*((j)+(M)*(k))
#define ijklNM(i,j,k,l,N,M) (i)+(N)*((j)+(N)*((k)+(M)*(l)))

//---[ 2D ]-----------------------------
@kernel void Assemble2D(const int NUM_QUAD_1D,
                        const int numElements,
                        @restrict const double * quadWeights,
                        @restrict const double * J,
                        const double COEFF,
                        @restrict double * oper) {
   const int NUM_QUAD = NUM_QUAD_1D*NUM_QUAD_1D;
   for (int e = 0; e < numElements; ++e; @outer) {
      for (int q = 0; q < NUM_QUAD; ++q; @inner) {
         const int NUM_QUAD = NUM_QUAD_1D*NUM_QUAD_1D;
         const double J11 = J[ijklNM(0,0,q,e,2,NUM_QUAD)];
         const double J12 = J[ijklNM(1,0,q,e,2,NUM_QUAD)];
         const double J21 = J[ijklNM(0,1,q,e,2,NUM_QUAD)];
         const double J22 = J[ijklNM(1,1,q,e,2,NUM_QUAD)];
         const double c_detJ = quadWeights[q] * COEFF / ((J11*J22)-(J21*J12));
         oper[ijkNM(0,q,e,3,NUM_QUAD)] =  c_detJ * (J21*J21 + J22*J22);
         oper[ijkNM(1,q,e,3,NUM_QUAD)] = -c_detJ * (J21*J11 + J22*J12);
         oper[ijkNM(2,q,e,3,NUM_QUAD)] =  c_detJ * (J11*J11 + J12*J12);
      }
   }
}
